{"version":3,"sources":["../file:/Users/congnt/Work/Game/Fami/assets/scripts/models/file:/Users/congnt/Work/Game/Fami/assets/scripts/models/BeanFall.ts","../file:/Users/congnt/Work/Game/Fami/assets/scripts/models/file:/Users/congnt/Work/Game/Fami/assets/scripts/models/CameraFollow.ts","../file:/Applications/Cocos/Creator/3.8.3/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/file:/Applications/Cocos/Creator/3.8.3/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/debug-view-runtime-control.ts","../file:/Users/congnt/Work/Game/Fami/assets/scripts/managers/file:/Users/congnt/Work/Game/Fami/assets/scripts/managers/GameManager.ts","../file:/Users/congnt/Work/Game/Fami/assets/scripts/gameconfig/file:/Users/congnt/Work/Game/Fami/assets/scripts/gameconfig/Global.ts","../file:/Users/congnt/Work/Game/Fami/assets/scripts/models/file:/Users/congnt/Work/Game/Fami/assets/scripts/models/ScreenTouchHandler.ts"],"names":["ccclass","_decorator","property","_dec","_dec2","Node","_dec3","_descriptor","_applyDecoratedDescriptor","_class2","_Component","BeanFall","_this","_len","arguments","length","args","Array","_key","call","apply","concat","_initializerDefineProperty","_assertThisInitialized","_descriptor2","rigidBody","seesawCollider","seesawAnimation","_inheritsLoose","_proto","prototype","onLoad","PhysicsSystem2D","instance","enable","this","bean","getComponent","RigidBody2D","gravityScale","node","on","EventType","TOUCH_START","onTouchStart","seesaw","Animation","console","error","onDestroy","beanCollider","Collider2D","off","Contact2DType","BEGIN_CONTACT","onBeginContact","event","scheduleOnce","startFalling","scale","x","y","z","fixedRotation","selfCollider","otherCollider","contact","beanPosition","getWorldPosition","seesawPosition","seesawHeight","UITransform","height","playSeesawAnimation","stopBean","play","linearVelocity","Vec2","Component","configurable","enumerable","writable","initializer","_class","_RF","pop","CameraFollow","_descriptor3","screenHeight","halfScreenHeight","view","getVisibleSize","update","dt","player","targetPosition","currentPosition","newPositionY","offset","followSpeed","setWorldPosition","Vec3","_dec4","DebugViewRuntimeControl","_single","strSingle","strComposite","strMisc","compositeModeToggleList","singleModeToggleList","miscModeToggleList","textComponentList","labelComponentList","textContentList","hideButtonLabel","_currentColorIndex","strColor","color","Color","WHITE","BLACK","RED","GREEN","BLUE","start","parent","Canvas","uiTransform","halfScreenWidth","width","miscNode","getChildByName","buttonNode","instantiate","name","titleNode","i","newLabel","EnableAllCompositeModeButton","setPosition","setScale","labelComponent","Label","string","overflow","currentRow","newNode","singleModeToggle","textComponent","getComponentInChildren","RichText","Toggle","TOGGLE","toggleSingleMode","Button","CLICK","enableAllCompositeMode","changeColorButton","changeTextColor","HideButton","hideUI","compositeModeToggle","isChecked","toggleLightingWithAlbedo","toggleCSMColoration","toggleCompositeMode","isTextMatched","textUI","textDescription","tempText","String","findIndex","search","substr","toggle","debugView","director","root","singleMode","enableCompositeMode","lightingWithAlbedo","csmLayerColoration","button","toggleComponent","activeValue","active","deltaTime","GameManager","Global","playCount","playCountLabel","startButton","startGame","loadScene","Math","floor","random","_dec5","_dec6","_dec7","ScreenTouchHandler","_descriptor4","_descriptor5","_descriptor6","minScale","maxScale","duration","scalingTween","isPlayerLaunched","resultLabel","replayButton","TOUCH_END","onTouchEnd","TOUCH_CANCEL","replayGame","startScaling","stopScaling","stop","tween","to","union","repeatForever","launchPlayer","_this2","part","integerPart","getPosition","clone","position","easing","showResultLabel","cameraFollow","camera"],"mappings":"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","file":"all.js","sourcesContent":["import {\n  _decorator,\n  Component,\n  Node,\n  Vec2,\n  RigidBody2D,\n  EventTouch,\n  Collider2D,\n  Contact2DType,\n  IPhysics2DContact,\n  Animation,\n  UITransform,\n  ERigidBody2DType,\n  PhysicsSystem2D,\n} from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"BeanFall\")\nexport class BeanFall extends Component {\n  @property(Node)\n  bean: Node = null;\n\n  @property(Node)\n  seesaw: Node = null;\n\n  private rigidBody: RigidBody2D = null;\n  private seesawCollider: Collider2D = null;\n  private seesawAnimation: Animation = null;\n\n  onLoad() {\n    if (!PhysicsSystem2D.instance.enable) {\n      PhysicsSystem2D.instance.enable = true;\n    }\n\n    this.rigidBody = this.bean.getComponent(RigidBody2D);\n    if (!this.rigidBody) {\n      console.error(\"RigidBody2D component is not found on the bean.\");\n      return;\n    }\n\n    this.rigidBody.gravityScale = 0;\n\n    // const beanCollider = this.bean.getComponent(Collider2D);\n    // if (beanCollider) {\n    //   beanCollider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n    // } else {\n    //   console.error(\"Collider2D component is not found on the bean.\");\n    // }\n\n    // this.seesawCollider = this.seesaw.getComponent(Collider2D);\n    // if (this.seesawCollider) {\n    //   const seesawRigidBody = this.seesaw.getComponent(RigidBody2D);\n    //   if (seesawRigidBody) {\n    //     seesawRigidBody.type = ERigidBody2DType.Static;\n    //   } else {\n    //     console.error(\"RigidBody2D component is not found on the seesaw.\");\n    //   }\n    // } else {\n    //   console.error(\"Collider2D component is not found on the seesaw.\");\n    // }\n\n    // const seesawCollider = this.seesaw.getComponent(Collider2D);\n    // if (seesawCollider) {\n    //   seesawCollider.sensor = true;\n    // } else {\n    //   console.error(\"Collider2D component is not found on the seesaw.\");\n    // }\n\n    this.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this);\n\n    this.seesawAnimation = this.seesaw.getComponent(Animation);\n  }\n\n  onDestroy() {\n    const beanCollider = this.bean.getComponent(Collider2D);\n    if (beanCollider) {\n      beanCollider.off(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n    }\n\n    this.node.off(Node.EventType.TOUCH_START, this.onTouchStart, this);\n  }\n\n  onTouchStart(event: EventTouch) {\n    this.scheduleOnce(this.startFalling, 0);\n  }\n\n  startFalling() {\n    if (!this.rigidBody) {\n      return;\n    }\n\n    const scale = this.bean.scale;\n\n    const volume = scale.x * scale.y * scale.z;\n    const gravityScale = volume * 5;\n\n    this.rigidBody.fixedRotation = true;\n    this.rigidBody.gravityScale = gravityScale * 50;\n  }\n\n  onBeginContact(\n    selfCollider: Collider2D,\n    otherCollider: Collider2D,\n    contact: IPhysics2DContact\n  ) {\n    if (otherCollider.node === this.seesaw) {\n      const beanPosition = this.bean.getWorldPosition();\n      const seesawPosition = this.seesaw.getWorldPosition();\n      const seesawHeight = this.seesaw.getComponent(UITransform).height;\n      if (beanPosition.y > seesawPosition.y + seesawHeight / 2) {\n        this.playSeesawAnimation();\n      } else if (beanPosition.y < seesawPosition.y - seesawHeight / 2) {\n        this.stopBean();\n      }\n    }\n  }\n\n  playSeesawAnimation() {\n    if (this.seesawAnimation) {\n      this.seesawAnimation.play();\n    }\n  }\n\n  stopBean() {\n    this.rigidBody.gravityScale = 0;\n    this.rigidBody.linearVelocity = new Vec2(0, 0);\n  }\n}\n","import { _decorator, Component, Node, Vec3, view } from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"CameraFollow\")\nexport class CameraFollow extends Component {\n  @property(Node)\n  player: Node = null; // Node mà camera sẽ theo dõi\n\n  @property\n  offset: Vec3 = new Vec3(0, 0, 0); // Độ lệch của camera so với target\n\n  @property\n  followSpeed: number = 1; // Tốc độ theo dõi\n\n  private screenHeight: number = 0;\n  private halfScreenHeight: number = 0;\n\n  onLoad() {\n    this.screenHeight = view.getVisibleSize().height;\n    this.halfScreenHeight = this.screenHeight / 2;\n  }\n\n  update(dt: number) {\n    if (this.player) {\n      const targetPosition = this.player.getWorldPosition();\n      const currentPosition = this.node.getWorldPosition();\n\n      // Kiểm tra nếu player vượt quá 1/2 chiều cao của màn hình\n      if (targetPosition.y > this.halfScreenHeight) {\n        // Chỉ thay đổi vị trí theo trục Y\n        const newPositionY =\n          currentPosition.y +\n          (targetPosition.y + this.offset.y - currentPosition.y) *\n            dt *\n            this.followSpeed;\n        this.node.setWorldPosition(\n          new Vec3(currentPosition.x, newPositionY, currentPosition.z)\n        );\n      }\n    }\n  }\n}\n","import { Color, Canvas, UITransform, instantiate, math, Toggle, TextureCube, _decorator, Component, Button, labelAssembler, game, director, Node, Scene, renderer, CameraComponent, Label, ForwardPipeline, RichText } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('internal.DebugViewRuntimeControl')\nexport class DebugViewRuntimeControl extends Component {\n    @property(Node)\n    compositeModeToggle: Node | null = null;\n    @property(Node)\n    singleModeToggle: Node | null = null;\n    @property(Node)\n    EnableAllCompositeModeButton: Node | null = null;\n\t_single: number = 0;\n\n    private strSingle: string[] = [\n        'No Single Debug',\n        'Vertex Color',\n        'Vertex Normal',\n        'Vertex Tangent',\n        'World Position',\n        'Vertex Mirror',\n        'Face Side',\n        'UV0',\n        'UV1',\n        'UV Lightmap',\n        'Project Depth',\n        'Linear Depth',\n\n        'Fragment Normal',\n        'Fragment Tangent',\n        'Fragment Binormal',\n        'Base Color',\n        'Diffuse Color',\n        'Specular Color',\n        'Transparency',\n        'Metallic',\n        'Roughness',\n        'Specular Intensity',\n        'IOR',\n\n        'Direct Diffuse',\n        'Direct Specular',\n        'Direct All',\n        'Env Diffuse',\n        'Env Specular',\n        'Env All',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Fresnel',\n        'Direct Transmit Diffuse',\n        'Direct Transmit Specular',\n        'Env Transmit Diffuse',\n        'Env Transmit Specular',\n        'Transmit All',\n        'Direct Internal Specular',\n        'Env Internal Specular',\n        'Internal All',\n\n        'Fog',\n    ];\n    private strComposite: string[] = [\n        'Direct Diffuse',\n        'Direct Specular',\n        'Env Diffuse',\n        'Env Specular',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Normal Map',\n        'Fog',\n\n        'Tone Mapping',\n        'Gamma Correction',\n\n        'Fresnel',\n        'Transmit Diffuse',\n        'Transmit Specular',\n        'Internal Specular',\n        'TT',\n    ];\n    private strMisc: string[] = [\n        'CSM Layer Coloration',\n        'Lighting With Albedo',\n    ];\n\n    private compositeModeToggleList: Node[] = [];\n    private singleModeToggleList: Node[] = [];\n    private miscModeToggleList: Node[] = [];\n    private textComponentList: RichText[] = [];\n    private labelComponentList: Label[] = [];\n    private textContentList: string[] = [];\n    private hideButtonLabel: Label;\n    start() {\n        // get canvas resolution\n        const canvas = this.node.parent.getComponent(Canvas);\n        if (!canvas) {\n            console.error('debug-view-runtime-control should be child of Canvas');\n            return;\n        }\n\n        const uiTransform = this.node.parent.getComponent(UITransform);\n        const halfScreenWidth = uiTransform.width * 0.5;\n        const halfScreenHeight = uiTransform.height * 0.5;\n\n        let x = -halfScreenWidth + halfScreenWidth * 0.1, y = halfScreenHeight - halfScreenHeight * 0.1;\n        const width = 200, height = 20;\n\n        // new nodes\n        const miscNode = this.node.getChildByName('MiscMode');\n        const buttonNode = instantiate(miscNode);\n        buttonNode.parent = this.node;\n        buttonNode.name = 'Buttons';\n        const titleNode = instantiate(miscNode);\n        titleNode.parent = this.node;\n        titleNode.name = 'Titles';\n\n        // title\n        for (let i = 0; i < 2; i++) {\n            const newLabel = instantiate(this.EnableAllCompositeModeButton.getChildByName('Label'));\n            newLabel.setPosition(x + (i > 0 ? 50 + width * 2 : 150), y, 0.0);\n            newLabel.setScale(0.75, 0.75, 0.75);\n            newLabel.parent = titleNode;\n            const labelComponent = newLabel.getComponent(Label);\n            labelComponent.string = i ? '----------Composite Mode----------' : '----------Single Mode----------';\n            labelComponent.color = Color.WHITE;\n            labelComponent.overflow = 0;\n            this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        }\n\n        y -= height;\n        // single\n        let currentRow = 0;\n        for (let i = 0; i < this.strSingle.length; i++, currentRow++) {\n            if (i === this.strSingle.length >> 1) {\n                x += width;\n                currentRow = 0;\n            }\n            const newNode = i ? instantiate(this.singleModeToggle) : this.singleModeToggle;\n            newNode.setPosition(x, y - height * currentRow, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.singleModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strSingle[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleSingleMode, this);\n\n            this.singleModeToggleList[i] = newNode;\n        }\n\n        x += width;\n        // buttons\n        this.EnableAllCompositeModeButton.setPosition(x + 15, y, 0.0);\n        this.EnableAllCompositeModeButton.setScale(0.5, 0.5, 0.5);\n        this.EnableAllCompositeModeButton.on(Button.EventType.CLICK, this.enableAllCompositeMode, this);\n        this.EnableAllCompositeModeButton.parent = buttonNode;\n        let labelComponent = this.EnableAllCompositeModeButton.getComponentInChildren(Label);\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const changeColorButton = instantiate(this.EnableAllCompositeModeButton);\n        changeColorButton.setPosition(x + 90, y, 0.0);\n        changeColorButton.setScale(0.5, 0.5, 0.5);\n        changeColorButton.on(Button.EventType.CLICK, this.changeTextColor, this);\n        changeColorButton.parent = buttonNode;\n        labelComponent = changeColorButton.getComponentInChildren(Label);\n        labelComponent.string = 'TextColor';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const HideButton = instantiate(this.EnableAllCompositeModeButton);\n        HideButton.setPosition(x + 200, y, 0.0);\n        HideButton.setScale(0.5, 0.5, 0.5);\n        HideButton.on(Button.EventType.CLICK, this.hideUI, this);\n        HideButton.parent = this.node.parent;\n        labelComponent = HideButton.getComponentInChildren(Label);\n        labelComponent.string = 'Hide UI';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        this.hideButtonLabel = labelComponent;\n\n        // misc\n        y -= 40;\n        for (let i = 0; i < this.strMisc.length; i++) {\n            const newNode = instantiate(this.compositeModeToggle);\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = miscNode;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strMisc[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            const toggleComponent = newNode.getComponent(Toggle);\n            toggleComponent.isChecked = i ? true : false;\n            newNode.on(Toggle.EventType.TOGGLE, i ? this.toggleLightingWithAlbedo : this.toggleCSMColoration, this);\n            this.miscModeToggleList[i] = newNode;\n        }\n\n        // composite\n        y -= 150;\n        for (let i = 0; i < this.strComposite.length; i++) {\n            const newNode = i ? instantiate(this.compositeModeToggle) : this.compositeModeToggle;\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.compositeModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strComposite[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleCompositeMode, this);\n\n            this.compositeModeToggleList[i] = newNode;\n        }\n    }\n\n    isTextMatched(textUI, textDescription) : boolean {\n        let tempText = new String(textUI);\n        const findIndex = tempText.search('>');\n        if (findIndex === -1) {\n            return textUI === textDescription;\n        } else {\n            tempText = tempText.substr(findIndex + 1);\n            tempText = tempText.substr(0, tempText.search('<'));\n            return tempText === textDescription;\n        }\n    }\n    toggleSingleMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strSingle.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strSingle[i])) {\n                debugView.singleMode = i;\n            }\n        }\n    }\n    toggleCompositeMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strComposite.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strComposite[i])) {\n                debugView.enableCompositeMode(i, toggle.isChecked);\n            }\n        }\n    }\n    toggleLightingWithAlbedo(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.lightingWithAlbedo = toggle.isChecked;\n    }\n    toggleCSMColoration(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.csmLayerColoration = toggle.isChecked;\n    }\n    enableAllCompositeMode(button: Button) {\n        const debugView = director.root!.debugView;\n        debugView.enableAllCompositeMode(true);\n        for (let i = 0; i < this.compositeModeToggleList.length; i++) {\n            const toggleComponent = this.compositeModeToggleList[i].getComponent(Toggle);\n            toggleComponent.isChecked = true;\n        }\n\n        let toggleComponent = this.miscModeToggleList[0].getComponent(Toggle);\n        toggleComponent.isChecked = false;\n        debugView.csmLayerColoration = false;\n        toggleComponent = this.miscModeToggleList[1].getComponent(Toggle);\n        toggleComponent.isChecked = true;\n        debugView.lightingWithAlbedo = true;\n    }\n    hideUI(button: Button) {\n        const titleNode = this.node.getChildByName('Titles');\n        const activeValue = !titleNode.active;\n        this.singleModeToggleList[0].parent.active = activeValue;\n        this.miscModeToggleList[0].parent.active = activeValue;\n        this.compositeModeToggleList[0].parent.active = activeValue;\n        this.EnableAllCompositeModeButton.parent.active = activeValue;\n        titleNode.active = activeValue;\n        this.hideButtonLabel.string = activeValue ? 'Hide UI' : 'Show UI';\n    }\n\n    private _currentColorIndex = 0;\n    private strColor: string[] = [\n        '<color=#ffffff>',\n        '<color=#000000>',\n        '<color=#ff0000>',\n        '<color=#00ff00>',\n        '<color=#0000ff>',\n    ];\n    private color: Color[] = [\n        Color.WHITE,\n        Color.BLACK,\n        Color.RED,\n        Color.GREEN,\n        Color.BLUE,\n    ];\n    changeTextColor(button: Button) {\n        this._currentColorIndex++;\n        if (this._currentColorIndex >= this.strColor.length) {\n            this._currentColorIndex = 0;\n        }\n        for (let i = 0; i < this.textComponentList.length; i++) {\n            this.textComponentList[i].string = this.strColor[this._currentColorIndex] + this.textContentList[i] + '</color>';\n        }\n        for (let i = 0; i < this.labelComponentList.length; i++) {\n            this.labelComponentList[i].color = this.color[this._currentColorIndex];\n        }\n    }\n\n    onLoad() {\n    }\n    update(deltaTime: number) {\n    }\n}\n","import { _decorator, Component, Node, Label, director, Button } from \"cc\";\nimport { Global } from \"../gameconfig/Global\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"GameManager\")\nexport class GameManager extends Component {\n  @property(Label)\n  playCountLabel: Label = null;\n\n  @property(Button)\n  startButton: Button = null;\n\n  onLoad() {\n    if (Global.playCount > 0) {\n      this.playCountLabel.string = `Bạn có ${Global.playCount} lượt`;\n    } else {\n      this.playCountLabel.string = `Bạn đã hết lượt chơi`;\n    }\n\n    if (this.startButton) {\n      this.startButton.node.on(Button.EventType.CLICK, this.startGame, this);\n    } else {\n      console.error(\"Start button is not assigned.\");\n    }\n  }\n\n  onDestroy() {}\n\n  startGame() {\n    if (Global.playCount > 0) {\n      director.loadScene(\"InGame\");\n    }\n  }\n}\n","import { _decorator, Component, Node } from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"Global\")\nexport class Global extends Component {\n  static playCount: number = Math.floor(Math.random() * 4) + 3;\n}\n","import {\n  _decorator,\n  Component,\n  Node,\n  tween,\n  Tween,\n  Vec3,\n  RigidBody2D,\n  Contact2DType,\n  Collider2D,\n  IPhysics2DContact,\n  view,\n  Label,\n  Button,\n  director,\n} from \"cc\";\nimport { CameraFollow } from \"./CameraFollow\";\nimport { Global } from \"../gameconfig/Global\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"ScreenTouchHandler\")\nexport class ScreenTouchHandler extends Component {\n  @property(Node)\n  bean: Node = null;\n\n  @property(Node)\n  seesaw: Node = null;\n\n  @property(Node)\n  player: Node = null;\n\n  @property(Node)\n  camera: Node = null;\n\n  @property(Label)\n  resultLabel: Label = null;\n\n  @property(Button)\n  replayButton: Button = null;\n\n  minScale: number = 1;\n\n  maxScale: number = 5;\n\n  duration: number = 4;\n\n  private rigidBody: RigidBody2D = null;\n\n  private scalingTween: Tween<Node> = null;\n\n  private isPlayerLaunched: boolean = false;\n\n  onLoad() {\n    Global.playCount--;\n\n    if (this.resultLabel) {\n      this.resultLabel.node.active = false;\n    }\n\n    if (this.replayButton) {\n      this.replayButton.node.active = false;\n    }\n\n    this.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this);\n    this.node.on(Node.EventType.TOUCH_END, this.onTouchEnd, this);\n    this.node.on(Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\n\n    this.rigidBody = this.bean.getComponent(RigidBody2D);\n\n    if (!this.rigidBody) {\n      console.error(\"RigidBody2D component is not found on the bean.\");\n      return;\n    }\n\n    this.rigidBody.gravityScale = 0;\n\n    this.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this);\n\n    const beanCollider = this.bean.getComponent(Collider2D);\n\n    if (beanCollider) {\n      beanCollider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n    } else {\n      console.error(\"Collider2D component is not found on the bean.\");\n    }\n\n    this.replayButton.node.on(Button.EventType.CLICK, this.replayGame, this);\n  }\n\n  onDestroy() {\n    this.node.off(Node.EventType.TOUCH_START, this.onTouchStart, this);\n    this.node.off(Node.EventType.TOUCH_END, this.onTouchEnd, this);\n    this.node.off(Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\n\n    const beanCollider = this.bean.getComponent(Collider2D);\n    if (beanCollider) {\n      beanCollider.off(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n    }\n  }\n\n  replayGame() {\n    director.loadScene(\"StartGame\");\n  }\n\n  onTouchStart() {\n    this.startScaling();\n  }\n\n  onTouchEnd() {\n    this.stopScaling();\n  }\n\n  startScaling() {\n    if (!this.bean) {\n      console.error(\"Button node is not set.\");\n      return;\n    }\n\n    if (this.scalingTween) {\n      this.scalingTween.stop();\n    }\n\n    this.scalingTween = tween(this.bean)\n      .to(this.duration, {\n        scale: new Vec3(this.maxScale, this.maxScale, this.maxScale),\n      })\n      .to(this.duration, {\n        scale: new Vec3(this.minScale, this.minScale, this.minScale),\n      })\n      .union()\n      .repeatForever()\n      .start();\n  }\n\n  stopScaling() {\n    if (this.scalingTween) {\n      this.scalingTween.stop();\n      this.scalingTween = null;\n    }\n\n    const scale = this.bean.scale;\n\n    const volume = scale.x * scale.y * scale.z;\n    const gravityScale = volume * 10;\n\n    this.rigidBody.fixedRotation = true;\n    this.rigidBody.gravityScale = gravityScale;\n  }\n\n  onBeginContact(\n    selfCollider: Collider2D,\n    otherCollider: Collider2D,\n    contact: IPhysics2DContact\n  ) {\n    if (otherCollider.node === this.seesaw) {\n      this.launchPlayer();\n    }\n  }\n\n  launchPlayer() {\n    if (!this.player) {\n      console.error(\"Player node is not set.\");\n      return;\n    }\n\n    if (this.isPlayerLaunched) {\n      return;\n    }\n\n    this.isPlayerLaunched = true;\n\n    const scale = this.bean.scale.x;\n    const part =\n      ((scale - this.minScale) / (this.maxScale - this.minScale)) * 8 + 1;\n    const integerPart = Math.floor(part);\n\n    const screenHeight = view.getVisibleSize().height;\n    const targetPosition = this.player.getPosition().clone();\n    targetPosition.y += integerPart * screenHeight;\n\n    tween(this.player)\n      .to(1, { position: targetPosition }, { easing: \"quadOut\" })\n      .call(() => {\n        this.showResultLabel(integerPart);\n      })\n      .start();\n\n    const cameraFollow = this.camera.getComponent(CameraFollow);\n    if (cameraFollow) {\n      cameraFollow.player = this.player;\n    }\n  }\n\n  showResultLabel(integerPart) {\n    if (this.resultLabel) {\n      this.resultLabel.node.active = true;\n      this.resultLabel.string = `+ ${integerPart} điểm`;\n    }\n    if (this.replayButton) {\n      this.replayButton.node.active = true;\n    }\n  }\n}\n"]}