{"version":3,"sources":["../file:/Users/congnt/Work/Game/Fami/assets/scripts/managers/file:/Users/congnt/Work/Game/Fami/assets/scripts/managers/BackgroundScroller.ts","../file:/Users/congnt/Work/Game/Fami/assets/scripts/models/file:/Users/congnt/Work/Game/Fami/assets/scripts/models/BeanFall.ts","../file:/Users/congnt/Work/Game/Fami/assets/scripts/models/file:/Users/congnt/Work/Game/Fami/assets/scripts/models/CameraFollow.ts","../file:/Applications/Cocos/Creator/3.8.3/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/file:/Applications/Cocos/Creator/3.8.3/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/debug-view-runtime-control.ts","../file:/Users/congnt/Work/Game/Fami/assets/scripts/managers/file:/Users/congnt/Work/Game/Fami/assets/scripts/managers/GameManager.ts","../file:/Users/congnt/Work/Game/Fami/assets/scripts/gameconfig/file:/Users/congnt/Work/Game/Fami/assets/scripts/gameconfig/Global.ts","../file:/Users/congnt/Work/Game/Fami/assets/scripts/models/file:/Users/congnt/Work/Game/Fami/assets/scripts/models/ScreenTouchHandler.ts"],"names":["ccclass","_decorator","property","_dec","_dec2","Node","_dec3","_descriptor","_applyDecoratedDescriptor","_class2","_Component","BackgroundScroller","_this","_len","arguments","length","args","Array","_key","call","apply","concat","_initializerDefineProperty","_assertThisInitialized","_descriptor2","_descriptor3","bgHeight","isPlayerLaunched","_inheritsLoose","_proto","prototype","onLoad","viewSize","view","getVisibleSize","this","height","background1","setPosition","background2","update","dt","moveBackground","resetBackground","background","newY","position","y","speed","startScrolling","stopScrolling","Component","configurable","enumerable","writable","initializer","_class","_RF","pop","BeanFall","rigidBody","seesawCollider","seesawAnimation","PhysicsSystem2D","instance","enable","bean","getComponent","RigidBody2D","gravityScale","node","on","EventType","TOUCH_START","onTouchStart","seesaw","Animation","console","error","onDestroy","beanCollider","Collider2D","off","Contact2DType","BEGIN_CONTACT","onBeginContact","event","scheduleOnce","startFalling","scale","x","z","fixedRotation","selfCollider","otherCollider","contact","beanPosition","getWorldPosition","seesawPosition","seesawHeight","UITransform","playSeesawAnimation","stopBean","play","linearVelocity","Vec2","CameraFollow","screenHeight","halfScreenHeight","isFollowing","player","targetPosition","currentPosition","newPositionY","offset","followSpeed","Math","abs","setWorldPosition","Vec3","setFollowing","following","_dec4","DebugViewRuntimeControl","_single","strSingle","strComposite","strMisc","compositeModeToggleList","singleModeToggleList","miscModeToggleList","textComponentList","labelComponentList","textContentList","hideButtonLabel","_currentColorIndex","strColor","color","Color","WHITE","BLACK","RED","GREEN","BLUE","start","parent","Canvas","uiTransform","halfScreenWidth","width","miscNode","getChildByName","buttonNode","instantiate","name","titleNode","i","newLabel","EnableAllCompositeModeButton","setScale","labelComponent","Label","string","overflow","currentRow","newNode","singleModeToggle","textComponent","getComponentInChildren","RichText","Toggle","TOGGLE","toggleSingleMode","Button","CLICK","enableAllCompositeMode","changeColorButton","changeTextColor","HideButton","hideUI","compositeModeToggle","isChecked","toggleLightingWithAlbedo","toggleCSMColoration","toggleCompositeMode","isTextMatched","textUI","textDescription","tempText","String","findIndex","search","substr","toggle","debugView","director","root","singleMode","enableCompositeMode","lightingWithAlbedo","csmLayerColoration","button","toggleComponent","activeValue","active","deltaTime","GameManager","Global","playCount","playCountLabel","startButton","startGame","loadScene","floor","random","totalPoints","_dec5","_dec6","_dec7","_dec8","_dec9","_dec10","_dec11","_dec12","ScreenTouchHandler","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","minScale","maxScale","duration","rigidBean","rigidSeesaw","scalingTween","beanInitialPosition","beanInitialRotation","seesawInitialPosition","seesawInitialRotation","legOfSeesawInitialPosition","legOfSeesawInitialRotation","grassInitialPosition","grassInitialRotation","playerInitialPosition","cameraInitialPosition","onInitData","onInitController","TOUCH_END","onTouchEnd","replayButton","replayGame","resultLabel","accumulatedPoints","getPosition","clone","eulerAngles","legOfSeesaw","grass","camera","cameraFollow","resetNodes","startScaling","stopScaling","stop","tornLabel","toString","tween","to","union","repeatForever","launchPlayer","_this2","level","playerHeight","flyingAltitude","easing","delay","showResult","point","type","ERigidBody2DType","Static","setRotationFromEuler","Dynamic"],"mappings":"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","file":"all.js","sourcesContent":["import { _decorator, Component, Node, view, Vec3 } from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"BackgroundScroller\")\nexport class BackgroundScroller extends Component {\n  @property(Node)\n  background1: Node = null;\n\n  @property(Node)\n  background2: Node = null;\n\n  @property\n  speed: number = 100;\n\n  private bgHeight: number = 0;\n  private isPlayerLaunched: boolean = false;\n\n  onLoad() {\n    const viewSize = view.getVisibleSize();\n    this.bgHeight = viewSize.height;\n\n    this.background1.setPosition(0, 0, 0);\n    this.background2.setPosition(0, this.bgHeight, 0);\n  }\n\n  update(dt: number) {\n    if (this.isPlayerLaunched) {\n      this.moveBackground(this.background1, dt);\n      this.moveBackground(this.background2, dt);\n\n      // Kiểm tra và đặt lại vị trí nếu background ra khỏi màn hình\n      this.resetBackground(this.background1);\n      this.resetBackground(this.background2);\n    }\n  }\n\n  moveBackground(background: Node, dt: number) {\n    const newY = background.position.y - this.speed * dt;\n    background.setPosition(0, newY, 0);\n  }\n\n  resetBackground(background: Node) {\n    if (background.position.y <= -this.bgHeight) {\n      background.setPosition(0, this.bgHeight, 0);\n    }\n  }\n\n  startScrolling() {\n    this.isPlayerLaunched = true;\n  }\n\n  stopScrolling() {\n    this.isPlayerLaunched = false;\n  }\n}\n","import {\n  _decorator,\n  Component,\n  Node,\n  Vec2,\n  RigidBody2D,\n  EventTouch,\n  Collider2D,\n  Contact2DType,\n  IPhysics2DContact,\n  Animation,\n  UITransform,\n  PhysicsSystem2D,\n} from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"BeanFall\")\nexport class BeanFall extends Component {\n  @property(Node)\n  bean: Node = null;\n\n  @property(Node)\n  seesaw: Node = null;\n\n  private rigidBody: RigidBody2D = null;\n  private seesawCollider: Collider2D = null;\n  private seesawAnimation: Animation = null;\n\n  onLoad() {\n    if (!PhysicsSystem2D.instance.enable) {\n      PhysicsSystem2D.instance.enable = true;\n    }\n\n    this.rigidBody = this.bean.getComponent(RigidBody2D);\n    if (!this.rigidBody) {\n      console.error(\"RigidBody2D component is not found on the bean.\");\n      return;\n    }\n\n    this.rigidBody.gravityScale = 0;\n\n    this.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this);\n\n    this.seesawAnimation = this.seesaw.getComponent(Animation);\n  }\n\n  onDestroy() {\n    const beanCollider = this.bean.getComponent(Collider2D);\n    if (beanCollider) {\n      beanCollider.off(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n    }\n\n    this.node.off(Node.EventType.TOUCH_START, this.onTouchStart, this);\n  }\n\n  onTouchStart(event: EventTouch) {\n    this.scheduleOnce(this.startFalling, 0);\n  }\n\n  startFalling() {\n    if (!this.rigidBody) {\n      return;\n    }\n\n    const scale = this.bean.scale;\n\n    const volume = scale.x * scale.y * scale.z;\n    const gravityScale = volume * 5;\n\n    this.rigidBody.fixedRotation = true;\n    this.rigidBody.gravityScale = gravityScale * 50;\n  }\n\n  onBeginContact(\n    selfCollider: Collider2D,\n    otherCollider: Collider2D,\n    contact: IPhysics2DContact\n  ) {\n    if (otherCollider.node === this.seesaw) {\n      const beanPosition = this.bean.getWorldPosition();\n      const seesawPosition = this.seesaw.getWorldPosition();\n      const seesawHeight = this.seesaw.getComponent(UITransform).height;\n      if (beanPosition.y > seesawPosition.y + seesawHeight / 2) {\n        this.playSeesawAnimation();\n      } else if (beanPosition.y < seesawPosition.y - seesawHeight / 2) {\n        this.stopBean();\n      }\n    }\n  }\n\n  playSeesawAnimation() {\n    if (this.seesawAnimation) {\n      this.seesawAnimation.play();\n    }\n  }\n\n  stopBean() {\n    this.rigidBody.gravityScale = 0;\n    this.rigidBody.linearVelocity = new Vec2(0, 0);\n  }\n}\n","import { _decorator, Component, Node, Vec3, view } from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"CameraFollow\")\nexport class CameraFollow extends Component {\n  @property(Node)\n  player: Node = null;\n\n  @property\n  offset: Vec3 = new Vec3(0, 0, 0);\n\n  @property\n  followSpeed: number = 1;\n\n  private screenHeight: number = 0;\n  private halfScreenHeight: number = 0;\n\n  private isFollowing: boolean = false;\n\n  onLoad() {\n    this.screenHeight = view.getVisibleSize().height;\n    this.halfScreenHeight = this.screenHeight / 2;\n  }\n\n  update(dt: number) {\n    if (this.isFollowing && this.player) {\n      const targetPosition = this.player.getWorldPosition();\n      const currentPosition = this.node.getWorldPosition();\n\n      if (targetPosition.y > this.halfScreenHeight) {\n        const newPositionY =\n          currentPosition.y +\n          (targetPosition.y + this.offset.y - currentPosition.y) *\n            dt *\n            this.followSpeed;\n        if (Math.abs(newPositionY - currentPosition.y) > 0.01) {\n          this.node.setWorldPosition(\n            new Vec3(currentPosition.x, newPositionY, currentPosition.z)\n          );\n        }\n      }\n    }\n  }\n\n  setFollowing(following: boolean) {\n    this.isFollowing = following;\n  }\n}\n","import { Color, Canvas, UITransform, instantiate, math, Toggle, TextureCube, _decorator, Component, Button, labelAssembler, game, director, Node, Scene, renderer, CameraComponent, Label, ForwardPipeline, RichText } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('internal.DebugViewRuntimeControl')\nexport class DebugViewRuntimeControl extends Component {\n    @property(Node)\n    compositeModeToggle: Node | null = null;\n    @property(Node)\n    singleModeToggle: Node | null = null;\n    @property(Node)\n    EnableAllCompositeModeButton: Node | null = null;\n\t_single: number = 0;\n\n    private strSingle: string[] = [\n        'No Single Debug',\n        'Vertex Color',\n        'Vertex Normal',\n        'Vertex Tangent',\n        'World Position',\n        'Vertex Mirror',\n        'Face Side',\n        'UV0',\n        'UV1',\n        'UV Lightmap',\n        'Project Depth',\n        'Linear Depth',\n\n        'Fragment Normal',\n        'Fragment Tangent',\n        'Fragment Binormal',\n        'Base Color',\n        'Diffuse Color',\n        'Specular Color',\n        'Transparency',\n        'Metallic',\n        'Roughness',\n        'Specular Intensity',\n        'IOR',\n\n        'Direct Diffuse',\n        'Direct Specular',\n        'Direct All',\n        'Env Diffuse',\n        'Env Specular',\n        'Env All',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Fresnel',\n        'Direct Transmit Diffuse',\n        'Direct Transmit Specular',\n        'Env Transmit Diffuse',\n        'Env Transmit Specular',\n        'Transmit All',\n        'Direct Internal Specular',\n        'Env Internal Specular',\n        'Internal All',\n\n        'Fog',\n    ];\n    private strComposite: string[] = [\n        'Direct Diffuse',\n        'Direct Specular',\n        'Env Diffuse',\n        'Env Specular',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Normal Map',\n        'Fog',\n\n        'Tone Mapping',\n        'Gamma Correction',\n\n        'Fresnel',\n        'Transmit Diffuse',\n        'Transmit Specular',\n        'Internal Specular',\n        'TT',\n    ];\n    private strMisc: string[] = [\n        'CSM Layer Coloration',\n        'Lighting With Albedo',\n    ];\n\n    private compositeModeToggleList: Node[] = [];\n    private singleModeToggleList: Node[] = [];\n    private miscModeToggleList: Node[] = [];\n    private textComponentList: RichText[] = [];\n    private labelComponentList: Label[] = [];\n    private textContentList: string[] = [];\n    private hideButtonLabel: Label;\n    start() {\n        // get canvas resolution\n        const canvas = this.node.parent.getComponent(Canvas);\n        if (!canvas) {\n            console.error('debug-view-runtime-control should be child of Canvas');\n            return;\n        }\n\n        const uiTransform = this.node.parent.getComponent(UITransform);\n        const halfScreenWidth = uiTransform.width * 0.5;\n        const halfScreenHeight = uiTransform.height * 0.5;\n\n        let x = -halfScreenWidth + halfScreenWidth * 0.1, y = halfScreenHeight - halfScreenHeight * 0.1;\n        const width = 200, height = 20;\n\n        // new nodes\n        const miscNode = this.node.getChildByName('MiscMode');\n        const buttonNode = instantiate(miscNode);\n        buttonNode.parent = this.node;\n        buttonNode.name = 'Buttons';\n        const titleNode = instantiate(miscNode);\n        titleNode.parent = this.node;\n        titleNode.name = 'Titles';\n\n        // title\n        for (let i = 0; i < 2; i++) {\n            const newLabel = instantiate(this.EnableAllCompositeModeButton.getChildByName('Label'));\n            newLabel.setPosition(x + (i > 0 ? 50 + width * 2 : 150), y, 0.0);\n            newLabel.setScale(0.75, 0.75, 0.75);\n            newLabel.parent = titleNode;\n            const labelComponent = newLabel.getComponent(Label);\n            labelComponent.string = i ? '----------Composite Mode----------' : '----------Single Mode----------';\n            labelComponent.color = Color.WHITE;\n            labelComponent.overflow = 0;\n            this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        }\n\n        y -= height;\n        // single\n        let currentRow = 0;\n        for (let i = 0; i < this.strSingle.length; i++, currentRow++) {\n            if (i === this.strSingle.length >> 1) {\n                x += width;\n                currentRow = 0;\n            }\n            const newNode = i ? instantiate(this.singleModeToggle) : this.singleModeToggle;\n            newNode.setPosition(x, y - height * currentRow, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.singleModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strSingle[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleSingleMode, this);\n\n            this.singleModeToggleList[i] = newNode;\n        }\n\n        x += width;\n        // buttons\n        this.EnableAllCompositeModeButton.setPosition(x + 15, y, 0.0);\n        this.EnableAllCompositeModeButton.setScale(0.5, 0.5, 0.5);\n        this.EnableAllCompositeModeButton.on(Button.EventType.CLICK, this.enableAllCompositeMode, this);\n        this.EnableAllCompositeModeButton.parent = buttonNode;\n        let labelComponent = this.EnableAllCompositeModeButton.getComponentInChildren(Label);\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const changeColorButton = instantiate(this.EnableAllCompositeModeButton);\n        changeColorButton.setPosition(x + 90, y, 0.0);\n        changeColorButton.setScale(0.5, 0.5, 0.5);\n        changeColorButton.on(Button.EventType.CLICK, this.changeTextColor, this);\n        changeColorButton.parent = buttonNode;\n        labelComponent = changeColorButton.getComponentInChildren(Label);\n        labelComponent.string = 'TextColor';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const HideButton = instantiate(this.EnableAllCompositeModeButton);\n        HideButton.setPosition(x + 200, y, 0.0);\n        HideButton.setScale(0.5, 0.5, 0.5);\n        HideButton.on(Button.EventType.CLICK, this.hideUI, this);\n        HideButton.parent = this.node.parent;\n        labelComponent = HideButton.getComponentInChildren(Label);\n        labelComponent.string = 'Hide UI';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        this.hideButtonLabel = labelComponent;\n\n        // misc\n        y -= 40;\n        for (let i = 0; i < this.strMisc.length; i++) {\n            const newNode = instantiate(this.compositeModeToggle);\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = miscNode;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strMisc[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            const toggleComponent = newNode.getComponent(Toggle);\n            toggleComponent.isChecked = i ? true : false;\n            newNode.on(Toggle.EventType.TOGGLE, i ? this.toggleLightingWithAlbedo : this.toggleCSMColoration, this);\n            this.miscModeToggleList[i] = newNode;\n        }\n\n        // composite\n        y -= 150;\n        for (let i = 0; i < this.strComposite.length; i++) {\n            const newNode = i ? instantiate(this.compositeModeToggle) : this.compositeModeToggle;\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.compositeModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strComposite[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleCompositeMode, this);\n\n            this.compositeModeToggleList[i] = newNode;\n        }\n    }\n\n    isTextMatched(textUI, textDescription) : boolean {\n        let tempText = new String(textUI);\n        const findIndex = tempText.search('>');\n        if (findIndex === -1) {\n            return textUI === textDescription;\n        } else {\n            tempText = tempText.substr(findIndex + 1);\n            tempText = tempText.substr(0, tempText.search('<'));\n            return tempText === textDescription;\n        }\n    }\n    toggleSingleMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strSingle.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strSingle[i])) {\n                debugView.singleMode = i;\n            }\n        }\n    }\n    toggleCompositeMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strComposite.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strComposite[i])) {\n                debugView.enableCompositeMode(i, toggle.isChecked);\n            }\n        }\n    }\n    toggleLightingWithAlbedo(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.lightingWithAlbedo = toggle.isChecked;\n    }\n    toggleCSMColoration(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.csmLayerColoration = toggle.isChecked;\n    }\n    enableAllCompositeMode(button: Button) {\n        const debugView = director.root!.debugView;\n        debugView.enableAllCompositeMode(true);\n        for (let i = 0; i < this.compositeModeToggleList.length; i++) {\n            const toggleComponent = this.compositeModeToggleList[i].getComponent(Toggle);\n            toggleComponent.isChecked = true;\n        }\n\n        let toggleComponent = this.miscModeToggleList[0].getComponent(Toggle);\n        toggleComponent.isChecked = false;\n        debugView.csmLayerColoration = false;\n        toggleComponent = this.miscModeToggleList[1].getComponent(Toggle);\n        toggleComponent.isChecked = true;\n        debugView.lightingWithAlbedo = true;\n    }\n    hideUI(button: Button) {\n        const titleNode = this.node.getChildByName('Titles');\n        const activeValue = !titleNode.active;\n        this.singleModeToggleList[0].parent.active = activeValue;\n        this.miscModeToggleList[0].parent.active = activeValue;\n        this.compositeModeToggleList[0].parent.active = activeValue;\n        this.EnableAllCompositeModeButton.parent.active = activeValue;\n        titleNode.active = activeValue;\n        this.hideButtonLabel.string = activeValue ? 'Hide UI' : 'Show UI';\n    }\n\n    private _currentColorIndex = 0;\n    private strColor: string[] = [\n        '<color=#ffffff>',\n        '<color=#000000>',\n        '<color=#ff0000>',\n        '<color=#00ff00>',\n        '<color=#0000ff>',\n    ];\n    private color: Color[] = [\n        Color.WHITE,\n        Color.BLACK,\n        Color.RED,\n        Color.GREEN,\n        Color.BLUE,\n    ];\n    changeTextColor(button: Button) {\n        this._currentColorIndex++;\n        if (this._currentColorIndex >= this.strColor.length) {\n            this._currentColorIndex = 0;\n        }\n        for (let i = 0; i < this.textComponentList.length; i++) {\n            this.textComponentList[i].string = this.strColor[this._currentColorIndex] + this.textContentList[i] + '</color>';\n        }\n        for (let i = 0; i < this.labelComponentList.length; i++) {\n            this.labelComponentList[i].color = this.color[this._currentColorIndex];\n        }\n    }\n\n    onLoad() {\n    }\n    update(deltaTime: number) {\n    }\n}\n","import { _decorator, Component, Node, Label, director, Button } from \"cc\";\nimport { Global } from \"../gameconfig/Global\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"GameManager\")\nexport class GameManager extends Component {\n  @property(Label)\n  playCountLabel: Label = null;\n\n  @property(Button)\n  startButton: Button = null;\n\n  onLoad() {\n    if (Global.playCount > 0) {\n      this.playCountLabel.string = `Bạn có ${Global.playCount} lượt`;\n    } else {\n      this.playCountLabel.string = `Bạn đã hết lượt chơi`;\n    }\n\n    if (this.startButton) {\n      this.startButton.node.on(Button.EventType.CLICK, this.startGame, this);\n    } else {\n      console.error(\"Start button is not assigned.\");\n    }\n  }\n\n  onDestroy() {}\n\n  startGame() {\n    if (Global.playCount > 0) {\n      director.loadScene(\"InGame\");\n    }\n  }\n}\n","import { _decorator, Component, Node } from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"Global\")\nexport class Global extends Component {\n  static playCount: number = Math.floor(Math.random() * 4) + 3;\n  static totalPoints: number = 0;\n}\n","import {\n  _decorator,\n  Component,\n  Node,\n  tween,\n  Tween,\n  Vec3,\n  RigidBody2D,\n  Contact2DType,\n  Collider2D,\n  IPhysics2DContact,\n  view,\n  Label,\n  Button,\n  director,\n  UITransform,\n  ERigidBody2DType,\n} from \"cc\";\nimport { CameraFollow } from \"./CameraFollow\";\nimport { Global } from \"../gameconfig/Global\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"ScreenTouchHandler\")\nexport class ScreenTouchHandler extends Component {\n  @property(Node)\n  bean: Node = null;\n\n  @property(Node)\n  seesaw: Node = null;\n\n  @property(Node)\n  legOfSeesaw: Node = null;\n\n  @property(Node)\n  grass: Node = null;\n\n  @property(Node)\n  player: Node = null;\n\n  @property(Node)\n  camera: Node = null;\n\n  @property(Label)\n  resultLabel: Label = null;\n\n  @property(Button)\n  replayButton: Button = null;\n\n  @property(Node)\n  accumulatedPoints: Node = null;\n\n  @property(Label)\n  point: Label = null;\n\n  @property(Label)\n  tornLabel: Label = null;\n\n  minScale: number = 1;\n\n  maxScale: number = 5;\n\n  duration: number = 4;\n\n  private rigidBean: RigidBody2D = null;\n\n  private rigidSeesaw: RigidBody2D = null;\n\n  private scalingTween: Tween<Node> = null;\n\n  private isPlayerLaunched: boolean = false;\n\n  private beanInitialPosition: Vec3 = null;\n  private beanInitialRotation: Vec3 = null;\n\n  private seesawInitialPosition: Vec3 = null;\n  private seesawInitialRotation: Vec3 = null;\n  private legOfSeesawInitialPosition: Vec3 = null;\n  private legOfSeesawInitialRotation: Vec3 = null;\n\n  private grassInitialPosition: Vec3 = null;\n  private grassInitialRotation: Vec3 = null;\n  private playerInitialPosition: Vec3 = null;\n\n  private cameraInitialPosition: Vec3 = null;\n\n  onLoad() {\n    this.onInitData();\n    this.onInitController();\n  }\n\n  onInitController() {\n    this.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this);\n    this.node.on(Node.EventType.TOUCH_END, this.onTouchEnd, this);\n\n    this.rigidBean = this.bean.getComponent(RigidBody2D);\n    this.rigidSeesaw = this.seesaw.getComponent(RigidBody2D);\n\n    this.rigidBean.gravityScale = 0;\n\n    const beanCollider = this.bean.getComponent(Collider2D);\n\n    beanCollider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n\n    this.replayButton.node.on(Button.EventType.CLICK, this.replayGame, this);\n  }\n\n  onInitData() {\n    this.resultLabel.node.active = false;\n    this.replayButton.node.active = false;\n    this.accumulatedPoints.active = false;\n\n    this.beanInitialPosition = this.bean.getPosition().clone();\n    this.beanInitialRotation = this.bean.getPosition().clone();\n\n    this.seesawInitialPosition = this.seesaw.getPosition().clone();\n    this.seesawInitialRotation = this.seesaw.eulerAngles.clone();\n\n    this.legOfSeesawInitialPosition = this.legOfSeesaw.getPosition().clone();\n    this.legOfSeesawInitialRotation = this.legOfSeesaw.eulerAngles.clone();\n\n    this.grassInitialPosition = this.grass.getPosition().clone();\n    this.grassInitialRotation = this.grass.eulerAngles.clone();\n\n    this.playerInitialPosition = this.player.getPosition().clone();\n\n    this.cameraInitialPosition = this.camera.getPosition().clone();\n  }\n\n  onDestroy() {\n    this.node.off(Node.EventType.TOUCH_START, this.onTouchStart, this);\n    this.node.off(Node.EventType.TOUCH_END, this.onTouchEnd, this);\n\n    const beanCollider = this.bean.getComponent(Collider2D);\n    if (beanCollider) {\n      beanCollider.off(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n    }\n  }\n\n  replayGame() {\n    if (Global.playCount > 0) {\n      this.player.setPosition(this.playerInitialPosition);\n\n      this.camera.setPosition(this.cameraInitialPosition);\n\n      const cameraFollow = this.camera.getComponent(CameraFollow);\n      if (cameraFollow) {\n        cameraFollow.setFollowing(false);\n      }\n      this.resetNodes();\n\n      this.resultLabel.node.active = false;\n      this.replayButton.node.active = false;\n    } else {\n      director.loadScene(\"StartGame\");\n    }\n  }\n\n  onTouchStart() {\n    this.startScaling();\n  }\n\n  onTouchEnd() {\n    this.stopScaling();\n  }\n\n  startScaling() {\n    if (!this.bean) {\n      return;\n    }\n\n    if (this.scalingTween) {\n      this.scalingTween.stop();\n    }\n\n    Global.playCount--;\n    this.tornLabel.string = `${Global.playCount.toString()}`;\n\n    this.scalingTween = tween(this.bean)\n      .to(this.duration, {\n        scale: new Vec3(this.maxScale, this.maxScale, this.maxScale),\n      })\n      .to(this.duration, {\n        scale: new Vec3(this.minScale, this.minScale, this.minScale),\n      })\n      .union()\n      .repeatForever()\n      .start();\n  }\n\n  stopScaling() {\n    if (this.scalingTween) {\n      this.scalingTween.stop();\n      this.scalingTween = null;\n    }\n\n    const scale = this.bean.scale;\n\n    const volume = scale.x * scale.y * scale.z;\n    const gravityScale = volume * 10;\n\n    this.rigidBean.fixedRotation = true;\n    this.rigidBean.gravityScale = gravityScale;\n  }\n\n  onBeginContact(\n    selfCollider: Collider2D,\n    otherCollider: Collider2D,\n    contact: IPhysics2DContact\n  ) {\n    if (otherCollider.node === this.seesaw) {\n      this.launchPlayer();\n    }\n  }\n\n  launchPlayer() {\n    if (this.isPlayerLaunched) {\n      return;\n    }\n\n    this.isPlayerLaunched = true;\n\n    const scale = this.bean.scale.x;\n    const level = Math.floor(\n      ((scale - this.minScale) / (this.maxScale - this.minScale)) * 8 + 1\n    );\n    Global.totalPoints += level;\n    const screenHeight = view.getVisibleSize().height;\n    const targetPosition = this.player.getPosition().clone();\n    const uiTransform = this.player.getComponent(UITransform);\n    const playerHeight = uiTransform.height * this.player.scale.y;\n    const flyingAltitude = level * screenHeight + playerHeight;\n\n    targetPosition.y += flyingAltitude;\n\n    tween(this.player)\n      .to(1, { position: targetPosition }, { easing: \"quadOut\" })\n      .call(() => {\n        tween(this.node)\n          .delay(1)\n          .call(() => {\n            this.showResult(level);\n            this.resetNodes();\n          })\n          .start();\n      })\n      .start();\n\n    const cameraFollow = this.camera.getComponent(CameraFollow);\n    if (cameraFollow) {\n      cameraFollow.player = this.player;\n      cameraFollow.setFollowing(true); // Enable camera following\n    }\n  }\n\n  showResult(level) {\n    this.resultLabel.node.active = true;\n    this.replayButton.node.active = true;\n    this.accumulatedPoints.active = true;\n    this.resultLabel.string = `+${level} điểm`;\n    this.point.string = `${Global.totalPoints}`;\n  }\n\n  resetNodes() {\n    this.rigidBean.gravityScale = 0;\n\n    this.rigidBean.type = ERigidBody2DType.Static;\n    this.rigidSeesaw.type = ERigidBody2DType.Static;\n\n    this.bean.setPosition(this.beanInitialPosition);\n    this.bean.setRotationFromEuler(this.beanInitialRotation);\n    this.bean.setScale(new Vec3(this.minScale, this.minScale, this.minScale));\n\n    this.seesaw.setPosition(this.seesawInitialPosition);\n    this.seesaw.setRotationFromEuler(this.seesawInitialRotation);\n\n    this.legOfSeesaw.setPosition(this.legOfSeesawInitialPosition);\n    this.legOfSeesaw.setRotationFromEuler(this.legOfSeesawInitialRotation);\n\n    this.grass.setPosition(this.grassInitialPosition);\n    this.grass.setRotationFromEuler(this.grassInitialRotation);\n\n    this.rigidBean.type = ERigidBody2DType.Dynamic;\n    this.rigidSeesaw.type = ERigidBody2DType.Dynamic;\n\n    this.isPlayerLaunched = false;\n  }\n}\n"]}