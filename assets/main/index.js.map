{"version":3,"sources":["../file:/Users/congnt/Work/Game/Fami/assets/scripts/managers/file:/Users/congnt/Work/Game/Fami/assets/scripts/managers/BackgroundScroller.ts","../file:/Users/congnt/Work/Game/Fami/assets/scripts/models/file:/Users/congnt/Work/Game/Fami/assets/scripts/models/BeanFall.ts","../file:/Users/congnt/Work/Game/Fami/assets/scripts/models/file:/Users/congnt/Work/Game/Fami/assets/scripts/models/CameraFollow.ts","../file:/Applications/Cocos/Creator/3.8.3/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/file:/Applications/Cocos/Creator/3.8.3/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/debug-view-runtime-control.ts","../file:/Users/congnt/Work/Game/Fami/assets/scripts/managers/file:/Users/congnt/Work/Game/Fami/assets/scripts/managers/GameManager.ts","../file:/Users/congnt/Work/Game/Fami/assets/scripts/gameconfig/file:/Users/congnt/Work/Game/Fami/assets/scripts/gameconfig/Global.ts","../file:/Users/congnt/Work/Game/Fami/assets/scripts/gameconfig/file:/Users/congnt/Work/Game/Fami/assets/scripts/gameconfig/ItemConfig.ts","../file:/Users/congnt/Work/Game/Fami/assets/scripts/models/file:/Users/congnt/Work/Game/Fami/assets/scripts/models/ScreenTouchHandler.ts"],"names":["ccclass","_decorator","property","_dec","_dec2","Node","_dec3","_dec4","_descriptor","_applyDecoratedDescriptor","_class2","_Component","BackgroundScroller","_this","_len","arguments","length","args","Array","_key","call","apply","concat","_initializerDefineProperty","_assertThisInitialized","_descriptor2","_descriptor3","backgroundHeight","tempPlayerY","getLowerValue","A","B","_inheritsLoose","_proto","prototype","onLoad","this","background1","getComponent","UITransform","height","update","dt","playerY","player","getPosition","y","bg1Pos","bg2Pos","background2","scrollBackgrounds","setPosition","Vec3","x","z","Component","configurable","enumerable","writable","initializer","_class","_RF","pop","push","undefined","CameraFollow","initialPlayerPosition","initialCameraPosition","offset","isFollowing","isResetting","set","getWorldPosition","node","subtract","targetPosition","desiredPosition","add","newPosition","lerp","followSpeed","setWorldPosition","setFollowing","following","DebugViewRuntimeControl","_single","strSingle","strComposite","strMisc","compositeModeToggleList","singleModeToggleList","miscModeToggleList","textComponentList","labelComponentList","textContentList","hideButtonLabel","_currentColorIndex","strColor","color","Color","WHITE","BLACK","RED","GREEN","BLUE","start","parent","Canvas","uiTransform","halfScreenWidth","width","halfScreenHeight","miscNode","getChildByName","buttonNode","instantiate","name","titleNode","i","newLabel","EnableAllCompositeModeButton","setScale","labelComponent","Label","string","overflow","currentRow","newNode","singleModeToggle","textComponent","getComponentInChildren","RichText","on","Toggle","EventType","TOGGLE","toggleSingleMode","Button","CLICK","enableAllCompositeMode","changeColorButton","changeTextColor","HideButton","hideUI","compositeModeToggle","isChecked","toggleLightingWithAlbedo","toggleCSMColoration","toggleCompositeMode","console","error","isTextMatched","textUI","textDescription","tempText","String","findIndex","search","substr","toggle","debugView","director","root","singleMode","enableCompositeMode","lightingWithAlbedo","csmLayerColoration","button","toggleComponent","activeValue","active","deltaTime","GameManager","Global","playCount","playCountLabel","startButton","startGame","onDestroy","loadScene","Math","floor","random","totalPoints","LogoPositioner","setPositionWithPadding","_dec5","_dec6","_dec7","_dec8","_dec9","_dec10","_dec11","_dec12","_dec13","_dec14","_dec15","_dec16","_dec17","ScreenTouchHandler","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","minScale","maxScale","duration","rigidBean","rigidSeesaw","scalingTween","isPlayerLaunched","beanPosition","beanRotation","seesawPosition","seesawRotation","legOfSeesawPosition","legOfSeesawRotation","grassPosition","grassRotation","managerPosition","onInitData","onInitController","TOUCH_START","onTouchStart","TOUCH_END","onTouchEnd","replayButton","replayGame","bean","RigidBody2D","seesaw","gravityScale","Collider2D","Contact2DType","BEGIN_CONTACT","onBeginContact","resultLabel","totalPoint","endgameTitle","endgamePoint","endgamePlayer","endgameLogo","eulerAngles","legOfSeesaw","grass","off","beanCollider","startScaling","stopScaling","stop","tween","to","scale","union","repeatForever","fixedRotation","selfCollider","otherCollider","contact","launchPlayer","_this2","level","screenHeight","view","getVisibleSize","clone","cameraFollow","camera","worldPosition","easing","delay","showResult","backgroundScroller","enabled","_this3","point","uiOpacity","UIOpacity","addComponent","opacity","setTimeout","updateItems","logo","setRotationFromEuler","type","ERigidBody2DType","Static","Dynamic"],"mappings":"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","file":"all.js","sourcesContent":["import { _decorator, Component, Node, Vec3, UITransform, view } from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"BackgroundScroller\")\nexport class BackgroundScroller extends Component {\n  @property(Node)\n  background1: Node = null;\n\n  @property(Node)\n  background2: Node = null;\n\n  @property(Node)\n  player: Node = null;\n\n  private backgroundHeight: number = 0;\n  private tempPlayerY: number = 0;\n\n  onLoad() {\n    this.backgroundHeight = this.background1.getComponent(UITransform).height;\n  }\n\n  getLowerValue = (A: number, B: number): number => (A > B ? A : B);\n\n  update(dt: number) {\n    const playerY = this.player.getPosition().y;\n    if (this.tempPlayerY == playerY) return;\n    this.tempPlayerY = playerY;\n    const bg1Pos = this.background1.getPosition();\n    const bg2Pos = this.background2.getPosition();\n\n    if (playerY > this.getLowerValue(bg1Pos.y, bg2Pos.y)) {\n      this.scrollBackgrounds();\n    }\n  }\n\n  scrollBackgrounds() {\n    const bg1Pos = this.background1.getPosition();\n    const bg2Pos = this.background2.getPosition();\n\n    if (bg1Pos.y > bg2Pos.y) {\n      this.background2.setPosition(\n        new Vec3(bg1Pos.x, bg1Pos.y + this.backgroundHeight, bg1Pos.z)\n      );\n    } else {\n      this.background1.setPosition(\n        new Vec3(bg2Pos.x, bg2Pos.y + this.backgroundHeight, bg2Pos.z)\n      );\n    }\n  }\n}\n","// import {\n//   _decorator,\n//   Component,\n//   Node,\n//   Vec2,\n//   RigidBody2D,\n//   EventTouch,\n//   Collider2D,\n//   Contact2DType,\n//   IPhysics2DContact,\n//   Animation,\n//   UITransform,\n//   PhysicsSystem2D,\n// } from \"cc\";\n// const { ccclass, property } = _decorator;\n\n// @ccclass(\"BeanFall\")\n// export class BeanFall extends Component {\n//   @property(Node)\n//   bean: Node = null;\n\n//   @property(Node)\n//   seesaw: Node = null;\n\n//   private rigidBody: RigidBody2D = null;\n//   private seesawCollider: Collider2D = null;\n//   private seesawAnimation: Animation = null;\n\n//   onLoad() {\n//     if (!PhysicsSystem2D.instance.enable) {\n//       PhysicsSystem2D.instance.enable = true;\n//     }\n\n//     this.rigidBody = this.bean.getComponent(RigidBody2D);\n//     if (!this.rigidBody) {\n//       return;\n//     }\n\n//     this.rigidBody.gravityScale = 0;\n\n//     this.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this);\n\n//     this.seesawAnimation = this.seesaw.getComponent(Animation);\n//   }\n\n//   onDestroy() {\n//     const beanCollider = this.bean.getComponent(Collider2D);\n//     if (beanCollider) {\n//       beanCollider.off(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n//     }\n\n//     this.node.off(Node.EventType.TOUCH_START, this.onTouchStart, this);\n//   }\n\n//   onTouchStart(event: EventTouch) {\n//     this.scheduleOnce(this.startFalling, 0);\n//   }\n\n//   startFalling() {\n//     if (!this.rigidBody) {\n//       return;\n//     }\n\n//     const scale = this.bean.scale;\n\n//     const volume = scale.x * scale.y * scale.z;\n//     const gravityScale = volume * 5;\n\n//     this.rigidBody.fixedRotation = true;\n//     this.rigidBody.gravityScale = gravityScale * 50;\n//   }\n\n//   onBeginContact(\n//     selfCollider: Collider2D,\n//     otherCollider: Collider2D,\n//     contact: IPhysics2DContact\n//   ) {\n//     if (otherCollider.node === this.seesaw) {\n//       const beanPosition = this.bean.getWorldPosition();\n//       const seesawPosition = this.seesaw.getWorldPosition();\n//       const seesawHeight = this.seesaw.getComponent(UITransform).height;\n//       if (beanPosition.y > seesawPosition.y + seesawHeight / 2) {\n//         this.playSeesawAnimation();\n//       } else if (beanPosition.y < seesawPosition.y - seesawHeight / 2) {\n//         this.stopBean();\n//       }\n//     }\n//   }\n\n//   playSeesawAnimation() {\n//     if (this.seesawAnimation) {\n//       this.seesawAnimation.play();\n//     }\n//   }\n\n//   stopBean() {\n//     this.rigidBody.gravityScale = 0;\n//     this.rigidBody.linearVelocity = new Vec2(0, 0);\n//   }\n// }\n","import { _decorator, Component, Node, Vec3, view } from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"CameraFollow\")\nexport class CameraFollow extends Component {\n  @property(Node)\n  player: Node = null;\n\n  @property\n  followSpeed: number = 1;\n\n  private initialPlayerPosition: Vec3 = new Vec3();\n  private initialCameraPosition: Vec3 = new Vec3();\n  private offset: Vec3 = new Vec3();\n\n  private isFollowing: boolean = false;\n  private isResetting: boolean = false;\n\n  onLoad() {\n    if (this.player) {\n      this.initialPlayerPosition.set(this.player.getWorldPosition());\n      this.initialCameraPosition.set(this.node.getWorldPosition());\n\n      Vec3.subtract(\n        this.offset,\n        this.initialCameraPosition,\n        this.initialPlayerPosition\n      );\n    }\n  }\n\n  update(dt: number) {\n    if (this.isFollowing && this.player) {\n      const targetPosition = this.player.getWorldPosition();\n      const desiredPosition = new Vec3();\n\n      Vec3.add(desiredPosition, targetPosition, this.offset);\n\n      const cameraPosition = this.node.getWorldPosition();\n      const newPosition = cameraPosition.lerp(\n        desiredPosition,\n        dt * this.followSpeed\n      );\n      this.node.setWorldPosition(newPosition);\n    }\n  }\n\n  setFollowing(following: boolean) {\n    this.isFollowing = following;\n  }\n}\n","import { Color, Canvas, UITransform, instantiate, math, Toggle, TextureCube, _decorator, Component, Button, labelAssembler, game, director, Node, Scene, renderer, CameraComponent, Label, ForwardPipeline, RichText } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('internal.DebugViewRuntimeControl')\nexport class DebugViewRuntimeControl extends Component {\n    @property(Node)\n    compositeModeToggle: Node | null = null;\n    @property(Node)\n    singleModeToggle: Node | null = null;\n    @property(Node)\n    EnableAllCompositeModeButton: Node | null = null;\n\t_single: number = 0;\n\n    private strSingle: string[] = [\n        'No Single Debug',\n        'Vertex Color',\n        'Vertex Normal',\n        'Vertex Tangent',\n        'World Position',\n        'Vertex Mirror',\n        'Face Side',\n        'UV0',\n        'UV1',\n        'UV Lightmap',\n        'Project Depth',\n        'Linear Depth',\n\n        'Fragment Normal',\n        'Fragment Tangent',\n        'Fragment Binormal',\n        'Base Color',\n        'Diffuse Color',\n        'Specular Color',\n        'Transparency',\n        'Metallic',\n        'Roughness',\n        'Specular Intensity',\n        'IOR',\n\n        'Direct Diffuse',\n        'Direct Specular',\n        'Direct All',\n        'Env Diffuse',\n        'Env Specular',\n        'Env All',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Fresnel',\n        'Direct Transmit Diffuse',\n        'Direct Transmit Specular',\n        'Env Transmit Diffuse',\n        'Env Transmit Specular',\n        'Transmit All',\n        'Direct Internal Specular',\n        'Env Internal Specular',\n        'Internal All',\n\n        'Fog',\n    ];\n    private strComposite: string[] = [\n        'Direct Diffuse',\n        'Direct Specular',\n        'Env Diffuse',\n        'Env Specular',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Normal Map',\n        'Fog',\n\n        'Tone Mapping',\n        'Gamma Correction',\n\n        'Fresnel',\n        'Transmit Diffuse',\n        'Transmit Specular',\n        'Internal Specular',\n        'TT',\n    ];\n    private strMisc: string[] = [\n        'CSM Layer Coloration',\n        'Lighting With Albedo',\n    ];\n\n    private compositeModeToggleList: Node[] = [];\n    private singleModeToggleList: Node[] = [];\n    private miscModeToggleList: Node[] = [];\n    private textComponentList: RichText[] = [];\n    private labelComponentList: Label[] = [];\n    private textContentList: string[] = [];\n    private hideButtonLabel: Label;\n    start() {\n        // get canvas resolution\n        const canvas = this.node.parent.getComponent(Canvas);\n        if (!canvas) {\n            console.error('debug-view-runtime-control should be child of Canvas');\n            return;\n        }\n\n        const uiTransform = this.node.parent.getComponent(UITransform);\n        const halfScreenWidth = uiTransform.width * 0.5;\n        const halfScreenHeight = uiTransform.height * 0.5;\n\n        let x = -halfScreenWidth + halfScreenWidth * 0.1, y = halfScreenHeight - halfScreenHeight * 0.1;\n        const width = 200, height = 20;\n\n        // new nodes\n        const miscNode = this.node.getChildByName('MiscMode');\n        const buttonNode = instantiate(miscNode);\n        buttonNode.parent = this.node;\n        buttonNode.name = 'Buttons';\n        const titleNode = instantiate(miscNode);\n        titleNode.parent = this.node;\n        titleNode.name = 'Titles';\n\n        // title\n        for (let i = 0; i < 2; i++) {\n            const newLabel = instantiate(this.EnableAllCompositeModeButton.getChildByName('Label'));\n            newLabel.setPosition(x + (i > 0 ? 50 + width * 2 : 150), y, 0.0);\n            newLabel.setScale(0.75, 0.75, 0.75);\n            newLabel.parent = titleNode;\n            const labelComponent = newLabel.getComponent(Label);\n            labelComponent.string = i ? '----------Composite Mode----------' : '----------Single Mode----------';\n            labelComponent.color = Color.WHITE;\n            labelComponent.overflow = 0;\n            this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        }\n\n        y -= height;\n        // single\n        let currentRow = 0;\n        for (let i = 0; i < this.strSingle.length; i++, currentRow++) {\n            if (i === this.strSingle.length >> 1) {\n                x += width;\n                currentRow = 0;\n            }\n            const newNode = i ? instantiate(this.singleModeToggle) : this.singleModeToggle;\n            newNode.setPosition(x, y - height * currentRow, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.singleModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strSingle[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleSingleMode, this);\n\n            this.singleModeToggleList[i] = newNode;\n        }\n\n        x += width;\n        // buttons\n        this.EnableAllCompositeModeButton.setPosition(x + 15, y, 0.0);\n        this.EnableAllCompositeModeButton.setScale(0.5, 0.5, 0.5);\n        this.EnableAllCompositeModeButton.on(Button.EventType.CLICK, this.enableAllCompositeMode, this);\n        this.EnableAllCompositeModeButton.parent = buttonNode;\n        let labelComponent = this.EnableAllCompositeModeButton.getComponentInChildren(Label);\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const changeColorButton = instantiate(this.EnableAllCompositeModeButton);\n        changeColorButton.setPosition(x + 90, y, 0.0);\n        changeColorButton.setScale(0.5, 0.5, 0.5);\n        changeColorButton.on(Button.EventType.CLICK, this.changeTextColor, this);\n        changeColorButton.parent = buttonNode;\n        labelComponent = changeColorButton.getComponentInChildren(Label);\n        labelComponent.string = 'TextColor';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const HideButton = instantiate(this.EnableAllCompositeModeButton);\n        HideButton.setPosition(x + 200, y, 0.0);\n        HideButton.setScale(0.5, 0.5, 0.5);\n        HideButton.on(Button.EventType.CLICK, this.hideUI, this);\n        HideButton.parent = this.node.parent;\n        labelComponent = HideButton.getComponentInChildren(Label);\n        labelComponent.string = 'Hide UI';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        this.hideButtonLabel = labelComponent;\n\n        // misc\n        y -= 40;\n        for (let i = 0; i < this.strMisc.length; i++) {\n            const newNode = instantiate(this.compositeModeToggle);\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = miscNode;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strMisc[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            const toggleComponent = newNode.getComponent(Toggle);\n            toggleComponent.isChecked = i ? true : false;\n            newNode.on(Toggle.EventType.TOGGLE, i ? this.toggleLightingWithAlbedo : this.toggleCSMColoration, this);\n            this.miscModeToggleList[i] = newNode;\n        }\n\n        // composite\n        y -= 150;\n        for (let i = 0; i < this.strComposite.length; i++) {\n            const newNode = i ? instantiate(this.compositeModeToggle) : this.compositeModeToggle;\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.compositeModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strComposite[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleCompositeMode, this);\n\n            this.compositeModeToggleList[i] = newNode;\n        }\n    }\n\n    isTextMatched(textUI, textDescription) : boolean {\n        let tempText = new String(textUI);\n        const findIndex = tempText.search('>');\n        if (findIndex === -1) {\n            return textUI === textDescription;\n        } else {\n            tempText = tempText.substr(findIndex + 1);\n            tempText = tempText.substr(0, tempText.search('<'));\n            return tempText === textDescription;\n        }\n    }\n    toggleSingleMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strSingle.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strSingle[i])) {\n                debugView.singleMode = i;\n            }\n        }\n    }\n    toggleCompositeMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strComposite.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strComposite[i])) {\n                debugView.enableCompositeMode(i, toggle.isChecked);\n            }\n        }\n    }\n    toggleLightingWithAlbedo(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.lightingWithAlbedo = toggle.isChecked;\n    }\n    toggleCSMColoration(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.csmLayerColoration = toggle.isChecked;\n    }\n    enableAllCompositeMode(button: Button) {\n        const debugView = director.root!.debugView;\n        debugView.enableAllCompositeMode(true);\n        for (let i = 0; i < this.compositeModeToggleList.length; i++) {\n            const toggleComponent = this.compositeModeToggleList[i].getComponent(Toggle);\n            toggleComponent.isChecked = true;\n        }\n\n        let toggleComponent = this.miscModeToggleList[0].getComponent(Toggle);\n        toggleComponent.isChecked = false;\n        debugView.csmLayerColoration = false;\n        toggleComponent = this.miscModeToggleList[1].getComponent(Toggle);\n        toggleComponent.isChecked = true;\n        debugView.lightingWithAlbedo = true;\n    }\n    hideUI(button: Button) {\n        const titleNode = this.node.getChildByName('Titles');\n        const activeValue = !titleNode.active;\n        this.singleModeToggleList[0].parent.active = activeValue;\n        this.miscModeToggleList[0].parent.active = activeValue;\n        this.compositeModeToggleList[0].parent.active = activeValue;\n        this.EnableAllCompositeModeButton.parent.active = activeValue;\n        titleNode.active = activeValue;\n        this.hideButtonLabel.string = activeValue ? 'Hide UI' : 'Show UI';\n    }\n\n    private _currentColorIndex = 0;\n    private strColor: string[] = [\n        '<color=#ffffff>',\n        '<color=#000000>',\n        '<color=#ff0000>',\n        '<color=#00ff00>',\n        '<color=#0000ff>',\n    ];\n    private color: Color[] = [\n        Color.WHITE,\n        Color.BLACK,\n        Color.RED,\n        Color.GREEN,\n        Color.BLUE,\n    ];\n    changeTextColor(button: Button) {\n        this._currentColorIndex++;\n        if (this._currentColorIndex >= this.strColor.length) {\n            this._currentColorIndex = 0;\n        }\n        for (let i = 0; i < this.textComponentList.length; i++) {\n            this.textComponentList[i].string = this.strColor[this._currentColorIndex] + this.textContentList[i] + '</color>';\n        }\n        for (let i = 0; i < this.labelComponentList.length; i++) {\n            this.labelComponentList[i].color = this.color[this._currentColorIndex];\n        }\n    }\n\n    onLoad() {\n    }\n    update(deltaTime: number) {\n    }\n}\n","import { _decorator, Component, Node, Label, director, Button } from \"cc\";\nimport { Global } from \"../gameconfig/Global\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"GameManager\")\nexport class GameManager extends Component {\n  @property(Label)\n  playCountLabel: Label = null;\n\n  @property(Button)\n  startButton: Button = null;\n\n  onLoad() {\n    if (Global.playCount > 0) {\n      this.playCountLabel.string = `Bạn có ${Global.playCount} lượt`;\n    } else {\n      this.playCountLabel.string = `Bạn đã hết lượt chơi`;\n    }\n\n    if (this.startButton) {\n      this.startButton.node.on(Button.EventType.CLICK, this.startGame, this);\n    } else {\n      console.error(\"Start button is not assigned.\");\n    }\n  }\n\n  onDestroy() {}\n\n  startGame() {\n    if (Global.playCount > 0) {\n      director.loadScene(\"InGame\");\n    }\n  }\n}\n","import { _decorator, Component, Node } from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"Global\")\nexport class Global extends Component {\n  static playCount: number = Math.floor(Math.random() * 4) + 3;\n  static totalPoints: number = 0;\n}\n","// import { _decorator, Component, Node, view, Vec3, Canvas } from \"cc\";\n// const { ccclass, property } = _decorator;\n\n// @ccclass(\"ItemConfig\")\n// export class ItemConfig extends Component {\n//   @property(Node)\n//   logo: Node = null;\n\n//   @property(Canvas)\n//   canvas: Canvas = null;\n\n//   onLoad() {\n//     this.setPositionItemsPadding();\n//   }\n\n//   setPositionItemsPadding() {\n//     if (this.logo) {\n//       const paddingLeft = 20;\n//       const paddingTop = 20;\n//       const visibleSize = view.getVisibleSize();\n//       // Đặt vị trí của logo\n//       const newPosition = new Vec3(\n//         -visibleSize.width / 2 + paddingLeft + 66,\n//         visibleSize.height / 2 - paddingTop - 37,\n//         0\n//       );\n//       console.log(\"logo\", this.logo.getWorldPosition());\n//       console.log(\"newPosition\", newPosition);\n//       this.logo.setPosition(newPosition);\n\n//       // Cập nhật vị trí của logo\n//       //   this.canvas.node.addChild(this.logo);\n//     }\n//   }\n// }\n\nimport { _decorator, Component, Node, Vec3, UITransform, view } from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"LogoPositioner\")\nexport class LogoPositioner extends Component {\n  @property(Node)\n  logo: Node = null;\n\n  onLoad() {\n    this.setPositionWithPadding();\n  }\n\n  setPositionWithPadding() {\n    // if (this.logo) {\n    //   const paddingLeft = 20;\n    //   const paddingTop = 20;\n    //   // Lấy kích thước màn hình hiển thị\n    //   const visibleSize = view.getVisibleSize();\n    //   // Lấy UITransform component từ logo\n    //   const uiTransform = this.logo.getComponent(UITransform);\n    //   // Tính toán vị trí mới cho logo trong tọa độ của Canvas\n    //   const newPosition = new Vec3(\n    //     -visibleSize.width / 2 + paddingLeft + uiTransform.width / 2,\n    //     visibleSize.height / 2 - paddingTop - uiTransform.height / 2,\n    //     0\n    //   );\n    //   // Cập nhật vị trí của logo\n    //   this.logo.setPosition(newPosition);\n    // }\n  }\n}\n","import {\n  _decorator,\n  Component,\n  Node,\n  tween,\n  Tween,\n  Vec3,\n  RigidBody2D,\n  Contact2DType,\n  Collider2D,\n  IPhysics2DContact,\n  view,\n  Label,\n  Button,\n  director,\n  ERigidBody2DType,\n  UIOpacity,\n} from \"cc\";\nimport { CameraFollow } from \"./CameraFollow\";\nimport { Global } from \"../gameconfig/Global\";\nimport { BackgroundScroller } from \"../managers/BackgroundScroller\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"ScreenTouchHandler\")\nexport class ScreenTouchHandler extends Component {\n  @property(Node)\n  bean: Node = null;\n\n  @property(Node)\n  seesaw: Node = null;\n\n  @property(Node)\n  legOfSeesaw: Node = null;\n\n  @property(Node)\n  grass: Node = null;\n\n  @property(Node)\n  player: Node = null;\n\n  @property(Node)\n  camera: Node = null;\n\n  @property(Node)\n  backgroundScroller: Node = null;\n\n  @property(Label)\n  resultLabel: Label = null;\n\n  @property(Button)\n  replayButton: Button = null;\n\n  @property(Node)\n  totalPoint: Node = null;\n\n  @property(Label)\n  point: Label = null;\n\n  @property(Label)\n  endgameTitle: Label = null;\n\n  @property(Label)\n  endgamePoint: Label = null;\n\n  @property(Node)\n  endgamePlayer: Node = null;\n\n  @property(Node)\n  endgameLogo: Node = null;\n\n  @property(Node)\n  logo: Node = null;\n\n  minScale: number = 1;\n\n  maxScale: number = 5;\n\n  duration: number = 4;\n\n  private rigidBean: RigidBody2D = null;\n\n  private rigidSeesaw: RigidBody2D = null;\n\n  private scalingTween: Tween<Node> = null;\n\n  private isPlayerLaunched: boolean = false;\n\n  private beanPosition: Vec3 = null;\n  private beanRotation: Vec3 = null;\n\n  private seesawPosition: Vec3 = null;\n  private seesawRotation: Vec3 = null;\n\n  private legOfSeesawPosition: Vec3 = null;\n  private legOfSeesawRotation: Vec3 = null;\n\n  private grassPosition: Vec3 = null;\n  private grassRotation: Vec3 = null;\n\n  private managerPosition: Vec3 = null;\n\n  onLoad() {\n    this.onInitData();\n    this.onInitController();\n  }\n\n  onInitController() {\n    this.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this);\n    this.node.on(Node.EventType.TOUCH_END, this.onTouchEnd, this);\n    this.replayButton.node.on(Button.EventType.CLICK, this.replayGame, this);\n\n    this.rigidBean = this.bean.getComponent(RigidBody2D);\n    this.rigidSeesaw = this.seesaw.getComponent(RigidBody2D);\n\n    this.rigidBean.gravityScale = 0;\n\n    const beanCollider = this.bean.getComponent(Collider2D);\n    beanCollider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n  }\n\n  onInitData() {\n    this.resultLabel.node.active = false;\n    this.replayButton.node.active = false;\n    this.totalPoint.active = false;\n    this.endgameTitle.node.active = false;\n    this.endgamePoint.node.active = false;\n    this.endgamePlayer.active = false;\n    this.endgameLogo.active = false;\n\n    this.beanPosition = this.bean.getWorldPosition();\n    this.beanRotation = this.bean.getPosition();\n\n    this.seesawPosition = this.seesaw.getWorldPosition();\n    this.seesawRotation = this.seesaw.eulerAngles;\n\n    this.legOfSeesawPosition = this.legOfSeesaw.getWorldPosition();\n    this.legOfSeesawRotation = this.legOfSeesaw.eulerAngles;\n\n    this.grassPosition = this.grass.getWorldPosition();\n    this.grassRotation = this.grass.eulerAngles;\n\n    this.managerPosition = this.node.getWorldPosition();\n  }\n\n  onDestroy() {\n    this.node.off(Node.EventType.TOUCH_START, this.onTouchStart, this);\n    this.node.off(Node.EventType.TOUCH_END, this.onTouchEnd, this);\n\n    const beanCollider = this.bean.getComponent(Collider2D);\n    if (beanCollider) {\n      beanCollider.off(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n    }\n  }\n\n  replayGame() {\n    director.loadScene(\"StartGame\");\n  }\n\n  onTouchStart() {\n    this.startScaling();\n  }\n\n  onTouchEnd() {\n    this.stopScaling();\n  }\n\n  startScaling() {\n    if (!this.bean) {\n      return;\n    }\n\n    if (this.scalingTween) {\n      this.scalingTween.stop();\n    }\n\n    this.scalingTween = tween(this.bean)\n      .to(this.duration, {\n        scale: new Vec3(this.maxScale, this.maxScale, this.maxScale),\n      })\n      .to(this.duration, {\n        scale: new Vec3(this.minScale, this.minScale, this.minScale),\n      })\n      .union()\n      .repeatForever()\n      .start();\n  }\n\n  stopScaling() {\n    if (this.scalingTween) {\n      this.scalingTween.stop();\n      this.scalingTween = null;\n    }\n\n    const scale = this.bean.scale;\n    const volume = scale.x * scale.y * scale.z;\n    const gravityScale = volume * 10;\n\n    this.rigidBean.fixedRotation = true;\n    this.rigidBean.gravityScale = gravityScale;\n\n    Global.playCount--;\n  }\n\n  onBeginContact(\n    selfCollider: Collider2D,\n    otherCollider: Collider2D,\n    contact: IPhysics2DContact\n  ) {\n    if (otherCollider.node === this.seesaw) {\n      this.launchPlayer();\n    }\n  }\n\n  launchPlayer() {\n    if (this.isPlayerLaunched) {\n      return;\n    }\n\n    this.isPlayerLaunched = true;\n\n    const scale = this.bean.scale.x;\n    const level = Math.floor(\n      ((scale - this.minScale) / (this.maxScale - this.minScale)) * 8 + 1\n    );\n    Global.totalPoints += level;\n    const screenHeight = view.getVisibleSize().height;\n    const targetPosition = this.player.getWorldPosition().clone();\n\n    const duration = level * screenHeight;\n\n    targetPosition.y += duration;\n    this.seesawPosition.y += duration;\n    this.legOfSeesawPosition.y += duration;\n    this.grassPosition.y += duration;\n    this.beanPosition.y += duration;\n    this.managerPosition.y += duration;\n\n    const cameraFollow = this.camera.getComponent(CameraFollow);\n    if (cameraFollow) {\n      cameraFollow.player = this.player;\n      cameraFollow.setFollowing(true);\n    }\n\n    tween(this.player)\n      .to(1, { worldPosition: targetPosition }, { easing: \"quadOut\" })\n      .call(() => {\n        tween(this.node)\n          .delay(1)\n          .call(() => {\n            this.showResult(level);\n          })\n          .start();\n      })\n      .start();\n\n    const backgroundScroller =\n      this.backgroundScroller.getComponent(BackgroundScroller);\n    if (backgroundScroller) {\n      backgroundScroller.enabled = true;\n    }\n  }\n\n  showResult(level) {\n    this.resultLabel.node.active = true;\n    this.totalPoint.active = true;\n    this.resultLabel.string = `+${level} điểm`;\n    this.point.string = `${Global.totalPoints}`;\n\n    let uiOpacity = this.resultLabel.node.getComponent(UIOpacity);\n    if (!uiOpacity) {\n      uiOpacity = this.resultLabel.node.addComponent(UIOpacity);\n    }\n\n    uiOpacity.opacity = 0;\n    tween(uiOpacity).to(0.5, { opacity: 255 }).start();\n\n    setTimeout(() => {\n      tween(uiOpacity)\n        .to(0.5, { opacity: 0 })\n        .call(() => {\n          this.resultLabel.node.active = false;\n          this.updateItems();\n        })\n        .start();\n    }, 1000);\n  }\n\n  updateItems() {\n    if (Global.playCount == 0) {\n      this.player.active = false;\n      this.endgamePoint.string = `${Global.totalPoints} điểm`;\n      this.endgameTitle.node.active = true;\n      this.endgamePoint.node.active = true;\n      this.endgamePlayer.active = true;\n      this.replayButton.node.active = true;\n      this.endgameLogo.active = true;\n      this.logo.active = false;\n      this.totalPoint.active = false;\n      this.grass.setWorldPosition(this.grassPosition);\n      this.grass.setRotationFromEuler(this.grassRotation);\n    } else {\n      this.rigidBean.gravityScale = 0;\n\n      this.rigidBean.type = ERigidBody2DType.Static;\n      this.rigidSeesaw.type = ERigidBody2DType.Static;\n\n      this.bean.setWorldPosition(this.beanPosition);\n      this.bean.setRotationFromEuler(this.beanRotation);\n      this.bean.setScale(new Vec3(this.minScale, this.minScale, this.minScale));\n\n      this.seesaw.setWorldPosition(this.seesawPosition);\n      this.seesaw.setRotationFromEuler(this.seesawRotation);\n\n      this.legOfSeesaw.setWorldPosition(this.legOfSeesawPosition);\n      this.legOfSeesaw.setRotationFromEuler(this.legOfSeesawRotation);\n\n      this.grass.setWorldPosition(this.grassPosition);\n      this.grass.setRotationFromEuler(this.grassRotation);\n\n      this.rigidBean.type = ERigidBody2DType.Dynamic;\n      this.rigidSeesaw.type = ERigidBody2DType.Dynamic;\n\n      this.isPlayerLaunched = false;\n\n      this.node.setWorldPosition(this.managerPosition);\n\n      const cameraFollow = this.camera.getComponent(CameraFollow);\n      if (cameraFollow) {\n        cameraFollow.setFollowing(false);\n      }\n    }\n  }\n}\n"]}